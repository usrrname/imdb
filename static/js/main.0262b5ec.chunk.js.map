{"version":3,"sources":["movie-context.ts","components/MovieItem.tsx","components/MovieList.tsx","components/LikedMovieList.tsx","App.tsx","hooks/useMovieData.ts","hooks/useLikeToggle.ts","reportWebVitals.ts","index.tsx"],"names":["defaultValue","movies","isLoading","likedMoviesList","likeMovie","movie","unLikeMovie","MovieContext","createContext","MovieContextProvider","Provider","Consumer","MovieItem","useState","like","setLike","className","htmlFor","id","toString","type","checked","liked","onChange","handleChange","onClick","src","poster_path","alt","overview","original_title","popularity","MovieList","useContext","Context","map","LikedMoviesList","App","setMovies","setLoading","getPopularMovies","useCallback","axios","get","process","then","res","data","results","catch","err","console","error","useEffect","useMovieData","setlikedMoviesList","likedMoviesListCopy","some","m","concat","index","findIndex","beforeIndex","slice","afterIndex","useLikeToggle","value","basename","to","exact","path","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dotenv","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0262b5ec.chunk.js","sourcesContent":["import { createContext, ReactNode } from 'react';\nimport { Movie } from './models/interfaces';\n\nexport type MovieProviderProps = {\n  children: ReactNode,\n}\nexport interface MoviesContextData {\n  movies: Movie[],\n  isLoading: boolean,\n  likedMoviesList: Movie[],\n  likeMovie: (movie: Movie) => void,\n  unLikeMovie: (movie: Movie) => void,\n}\n\nconst defaultValue: MoviesContextData = {\n  movies: [],\n  isLoading: false,\n  likedMoviesList: [],\n  likeMovie: (movie: Movie) => { },\n  unLikeMovie: (movie: Movie) => { },\n}\n\nconst MovieContext = createContext<MoviesContextData>(defaultValue);\n\nexport default MovieContext;\nexport const MovieContextProvider = MovieContext.Provider;\nexport const MovieContextConsumer = MovieContext.Consumer;\n\n","\nimport { useState } from \"react\";\nimport { MovieItemProps } from \"../models/interfaces\";\n\nexport const MovieItem = ({ likeMovie, unLikeMovie, movie }: MovieItemProps) => {\n\n  let [like, setLike] = useState<boolean>(false);\n\n  const handleChange = (like: boolean) => {\n    !like && movie.liked ? unLikeMovie!(movie) : likeMovie!(movie)\n  }\n\n  return (\n    <div className=\"movie-tile\">\n      <div className=\"like-btn-wrapper\">\n        <label htmlFor={movie.id.toString()} className=\"like-label\">\n          <input id={movie.id.toString()} className=\"like-btn\" type=\"checkbox\"\n            checked={movie.liked}\n            onChange={() => { handleChange(like) }}\n            onClick={() => { setLike(like = !like) }}></input>\n        </label>\n      </div>\n      <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.overview} /><br></br>\n\n      <small>Title</small>\n      <p>{movie.original_title}</p>\n      <small>Popularity</small>\n      <p>{movie.popularity}</p>\n    </div>\n  )\n}\n\n","\nimport { Movie } from \"../models/interfaces\";\nimport Context from \"../movie-context\";\nimport React, { useContext } from 'react';\nimport { MovieItem } from \"./MovieItem\";\n\nexport const MovieList: React.FC = () => {\n\n\n  const { movies, likeMovie, unLikeMovie } = useContext(Context);\n\n  return (\n    <div className=\"movies-browser\">\n      { movies.map((movie: Movie) => {\n        return (\n          <MovieItem movie={movie} key={movie.id} likeMovie={likeMovie} unLikeMovie={unLikeMovie}></MovieItem>\n        )\n      })\n      }\n    </div>\n  )\n}\n\n","\nimport { Movie } from \"../models/interfaces\";\nimport Context from \"../movie-context\";\nimport React, { useContext } from 'react';\nimport { MovieItem } from \"./MovieItem\";\n\nexport const LikedMoviesList: React.FC = () => {\n\n  const { likedMoviesList, likeMovie, unLikeMovie } = useContext(Context);\n\n  return (\n    <>\n      <h2>Your Favourite Movies</h2>\n      <div className=\"movies-browser\">\n        {likedMoviesList.map((movie: Movie) => {\n          return (\n            <MovieItem movie={movie} key={movie.id} likeMovie={likeMovie} unLikeMovie={unLikeMovie}></MovieItem>\n          )\n        })\n        }\n      </div>\n    </>\n  )\n}\n","\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport { MovieContextProvider } from './movie-context';\nimport { useMovieData } from './hooks/useMovieData';\nimport { useLikeToggle } from './hooks/useLikeToggle';\nimport { MovieList } from './components/MovieList';\nimport { LikedMoviesList } from './components/LikedMovieList';\n\nexport const App = () => {\n  let { movies, isLoading } = useMovieData();\n  let { likeMovie, unLikeMovie, likedMoviesList } = useLikeToggle();\n\n  const value: any = {\n    movies,\n    isLoading,\n    likeMovie,\n    likedMoviesList,\n    unLikeMovie\n  }\n\n  return (\n    <Router basename=\"/imdb\">\n      <nav>\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/liked\">Liked</Link></li>\n        </ul>\n      </nav>\n      <div className=\"app-content\">\n        <MovieContextProvider value={value}>\n          <Switch>\n            <Route exact path='/'>\n              {isLoading ? <p>Loading...</p> : <MovieList />}\n            </Route>\n            <Route exact path='/liked'>\n              {likedMoviesList && likedMoviesList.length > 0 ? <LikedMoviesList /> : <p>You don't have any faved movies!</p>}\n            </Route>\n          </Switch>\n        </MovieContextProvider>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import axios from \"axios\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Movie } from \"../models/interfaces\";\nimport { MoviesContextData } from \"../movie-context\";\n\nexport function useMovieData(): Partial<MoviesContextData> {\n\n  let [movies, setMovies] = useState<Movie[]>([])\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  const getPopularMovies = useCallback(() => {\n    setLoading(true);\n    axios.get(`${process.env.REACT_APP_POPULARMOVIES_URL}?api_key=${process.env.REACT_APP_API_KEY}&page=1`)\n      .then(res => {\n        setMovies(res.data.results);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err)\n        setLoading(false);\n      });\n  }, [setMovies])\n\n  useEffect(() => getPopularMovies(), [getPopularMovies]);\n  return { isLoading, movies }\n}\n","import { useState, useCallback } from \"react\";\nimport { Movie } from \"../models/interfaces\";\nimport { MoviesContextData } from \"../movie-context\";\n\nexport function useLikeToggle(): Partial<MoviesContextData> {\n\n  let [likedMoviesList, setlikedMoviesList] = useState<Movie[]>([]);\n\n  const likeMovie = useCallback((movie: Movie): void => {\n    movie.liked = true;\n    let likedMoviesListCopy = [...likedMoviesList];\n    // check if movie exists, can't add the same movie twice\n    if (likedMoviesListCopy.some(m => m.id === movie.id)) {\n      return;\n    } else {\n      likedMoviesListCopy = likedMoviesListCopy.concat(movie);\n      setlikedMoviesList(likedMoviesListCopy);\n    }\n  }, [likedMoviesList]);\n\n  const unLikeMovie = useCallback((movie: Movie): void => {\n    let likedMoviesListCopy = [...likedMoviesList];\n    movie.liked = false;\n\n    const index = likedMoviesListCopy.findIndex(m => m.id === movie.id);\n    if (index > -1) {\n      const beforeIndex = likedMoviesListCopy.slice(0, index);\n      const afterIndex = likedMoviesListCopy!.slice(index + 1);\n      likedMoviesListCopy = beforeIndex.concat(afterIndex);\n    }\n    setlikedMoviesList(likedMoviesListCopy);\n  }, [likedMoviesList]);\n\n  return {\n    likedMoviesList,\n    likeMovie,\n    unLikeMovie\n  };\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as dotenv from \"dotenv\";\ndotenv.config({ path: '../.env' })\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}